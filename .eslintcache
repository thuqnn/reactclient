[{"/Users/admin/Desktop/test-express/client/src/index.js":"1","/Users/admin/Desktop/test-express/client/src/App.js":"2","/Users/admin/Desktop/test-express/client/src/reportWebVitals.js":"3","/Users/admin/Desktop/test-express/client/src/components/Navbar/Header.js":"4","/Users/admin/Desktop/test-express/client/src/components/Screens/Login.js":"5","/Users/admin/Desktop/test-express/client/src/components/Screens/Register.js":"6","/Users/admin/Desktop/test-express/client/src/components/Screens/Home.js":"7","/Users/admin/Desktop/test-express/client/src/components/Screens/Profile.js":"8","/Users/admin/Desktop/test-express/client/src/components/Screens/CreatePost.js":"9","/Users/admin/Desktop/test-express/client/src/components/Screens/UserProfile.js":"10","/Users/admin/Desktop/test-express/client/src/reducer/UserReducer.js":"11","/Users/admin/Desktop/test-express/client/src/components/Screens/SubUserPost.js":"12","/Users/admin/Desktop/test-express/client/src/config.js":"13"},{"size":478,"mtime":1607660027770,"results":"14","hashOfConfig":"15"},{"size":2163,"mtime":1609324286621,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1607579445647,"results":"17","hashOfConfig":"15"},{"size":2360,"mtime":1609314187376,"results":"18","hashOfConfig":"15"},{"size":2518,"mtime":1609347034322,"results":"19","hashOfConfig":"15"},{"size":2370,"mtime":1609347040108,"results":"20","hashOfConfig":"15"},{"size":5756,"mtime":1609347030299,"results":"21","hashOfConfig":"15"},{"size":1853,"mtime":1609347037046,"results":"22","hashOfConfig":"15"},{"size":3019,"mtime":1609347055247,"results":"23","hashOfConfig":"15"},{"size":4660,"mtime":1609339883219,"results":"24","hashOfConfig":"15"},{"size":479,"mtime":1608891119259,"results":"25","hashOfConfig":"15"},{"size":5671,"mtime":1609346617138,"results":"26","hashOfConfig":"15"},{"size":119,"mtime":1609347023042,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"18xni0p",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Desktop/test-express/client/src/index.js",[],["57","58"],"/Users/admin/Desktop/test-express/client/src/App.js",["59"],"import \"./App.css\";\nimport React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport { BrowserRouter, Route, Switch, useHistory } from \"react-router-dom\";\nimport Cookie from \"js-cookie\";\n\nimport { Header } from \"./components/Navbar/Header\";\nimport { Home } from \"./components/Screens/Home\";\nimport { Login } from \"./components/Screens/Login\";\nimport { Register } from \"./components/Screens/Register\";\nimport { Profile } from \"./components/Screens/Profile\";\nimport { CreatePost } from \"./components/Screens/CreatePost\";\nimport { UserProfile } from \"./components/Screens/UserProfile\";\nimport { SubUserPost } from \"./components/Screens/SubUserPost\";\n\nimport { reducer, initialState } from \"./reducer/UserReducer\";\n\nimport \"./lib/font-awesome/css/all.min.css\";\n\nexport const UserContext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(UserContext);\n  useEffect(() => {\n    if (state !== undefined) {\n      try {\n        const user = JSON.parse(Cookie.get(\"user\"));\n        if (user) {\n          dispatch({ type: \"USER\", payload: user });\n        }\n      } catch (errror) {\n        if (!history.location.pathname.startsWith(\"/reset\"))\n          history.push(\"/login\");\n      }\n    }\n    //const user = JSON.parse(localStorage.getItem(\"user\"));\n  }, []);\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <Home />\n      </Route>\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n      <Route path=\"/register\">\n        <Register />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/create\">\n        <CreatePost />\n      </Route>\n      <Route exact path=\"/profile/:id\">\n        <UserProfile />\n      </Route>\n      <Route exact path=\"/myfollowingpost\">\n        <SubUserPost />\n      </Route>\n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <Header />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/admin/Desktop/test-express/client/src/reportWebVitals.js",[],"/Users/admin/Desktop/test-express/client/src/components/Navbar/Header.js",[],"/Users/admin/Desktop/test-express/client/src/components/Screens/Login.js",["60"],"/Users/admin/Desktop/test-express/client/src/components/Screens/Register.js",[],"/Users/admin/Desktop/test-express/client/src/components/Screens/Home.js",["61"],"/Users/admin/Desktop/test-express/client/src/components/Screens/Profile.js",["62"],"/Users/admin/Desktop/test-express/client/src/components/Screens/CreatePost.js",[],"/Users/admin/Desktop/test-express/client/src/components/Screens/UserProfile.js",[],"/Users/admin/Desktop/test-express/client/src/reducer/UserReducer.js",[],"/Users/admin/Desktop/test-express/client/src/components/Screens/SubUserPost.js",["63"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { Link } from \"react-router-dom\";\nimport Cookie from \"js-cookie\";\nimport { MY_API } from \"../../config\";\n\nexport const SubUserPost = () => {\n  const [data, setData] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  // console.log(state);\n\n  useEffect(() => {\n    fetch(`${MY_API}/blog/getsubpost`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Thu Pham\" + Cookie.get(\"token\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        setData(result);\n      });\n  }, []);\n  const likePost = (id) => {\n    fetch(`${MY_API}/blog/like`, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Thu Pham\" + Cookie.get(\"token\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        // console.log(result);\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const unlikePost = (id) => {\n    fetch(`${MY_API}/blog/unlike`, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Thu Pham\" + Cookie.get(\"token\"),\n      },\n      body: JSON.stringify({\n        postId: id,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        //   console.log(result)\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const makeComment = (text, postId) => {\n    fetch(`${MY_API}/blog/comment`, {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Thu Pham\" + Cookie.get(\"token\"),\n      },\n      body: JSON.stringify({\n        postId,\n        text,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        const newData = data.map((item) => {\n          if (item._id === result._id) {\n            return result;\n          } else {\n            return item;\n          }\n        });\n        setData(newData);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const deletePost = (postid) => {\n    fetch(`${MY_API}/blog/deletepost/${postid}`, {\n      method: \"delete\",\n      headers: {\n        Authorization: \"Thu Pham\" + Cookie.get(\"token\"),\n      },\n      body: JSON.stringify({\n        postId: postid,\n      }),\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        //console.log(result);\n        const newData = data.filter((item) => {\n          return item._id !== result._id;\n        });\n        setData(newData);\n      });\n  };\n  return (\n    <div className=\"home container\">\n      <div className=\"row\">\n        {data.map((item) => {\n          // console.log(item);\n          return (\n            <div className=\"card\" key={item._id}>\n              <h5 style={{ padding: \"5px\" }}>\n                <Link\n                  to={\n                    item.postedBy._id !== state.id\n                      ? \"/profile/\" + item.postedBy._id\n                      : \"/profile\"\n                  }\n                >\n                  {item.postedBy.name}\n                </Link>\n\n                {item.postedBy._id === state.id && (\n                  <i\n                    className=\"fa fa-trash\"\n                    aria-hidden=\"true\"\n                    style={{ float: \"right\" }}\n                    onClick={() => deletePost(item._id)}\n                  ></i>\n                )}\n              </h5>\n              <img className=\"card-img-top\" src={item.image} alt={item.title} />\n              <div className=\"card-body\">\n                <i className=\"fa fa-heart\" style={{ color: \"red\" }}></i>\n                {item.likes.includes(state.id) ? (\n                  <i\n                    className=\"fa fa-thumbs-down\"\n                    aria-hidden=\"true\"\n                    onClick={() => unlikePost(item._id)}\n                  ></i>\n                ) : (\n                  <i\n                    className=\"fa fa-thumbs-up\"\n                    aria-hidden=\"true\"\n                    onClick={() => likePost(item._id)}\n                  ></i>\n                )}\n\n                <h6>{item.likes.length} Likes</h6>\n                <h6 className=\"card-title\">{item.title}</h6>\n                <p className=\"card-text\">{item.description}</p>\n                {item.comments.map((record) => {\n                  return (\n                    <h6 key={record._id}>\n                      <span style={{ fontWeight: \"500\" }}>\n                        {record.postedBy.name}\n                      </span>\n                      &nbsp;{record.text}\n                    </h6>\n                  );\n                })}\n                <form\n                  onSubmit={(e) => {\n                    e.preventDefault();\n                    makeComment(e.target[0].value, item._id);\n                    e.target.reset();\n                  }}\n                >\n                  <input type=\"text\" placeholder=\"add a comment\" />\n                </form>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","/Users/admin/Desktop/test-express/client/src/config.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":37,"column":6,"nodeType":"70","endLine":37,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":11,"nodeType":"74","messageId":"75","endLine":9,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":9,"column":18,"nodeType":"74","messageId":"75","endLine":9,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":8,"column":18,"nodeType":"74","messageId":"75","endLine":8,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":9,"column":18,"nodeType":"74","messageId":"75","endLine":9,"endColumn":26},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["79"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [dispatch, history, state]",{"range":"82","text":"83"},[1336,1338],"[dispatch, history, state]"]